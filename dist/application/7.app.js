(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[7],{

/***/ "./src/modules/patients/components/dental-history.tsx":
/*!************************************************************!*\
  !*** ./src/modules/patients/components/dental-history.tsx ***!
  \************************************************************/
/*! exports provided: DentalHistoryPanel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DentalHistoryPanel\", function() { return DentalHistoryPanel; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var rc_collapse_assets_index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rc-collapse/assets/index.css */ \"./node_modules/rc-collapse/assets/index.css\");\n/* harmony import */ var rc_collapse_assets_index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rc_collapse_assets_index_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _common_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @common-components */ \"./src/common-components/index.ts\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core */ \"./src/core/index.ts\");\n/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modules */ \"./src/modules/index.ts\");\n/* harmony import */ var common_components_editable_list_editable_list__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common-components/editable-list/editable-list */ \"./src/common-components/editable-list/editable-list.tsx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! mobx */ \"./node_modules/mobx/lib/mobx.module.js\");\n/* harmony import */ var mobx_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! mobx-react */ \"./node_modules/mobx-react/index.module.js\");\n/* harmony import */ var office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! office-ui-fabric-react */ \"./node_modules/office-ui-fabric-react/lib/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var react_dropdown_select__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-dropdown-select */ \"./node_modules/react-dropdown-select/lib/index.js\");\n/* harmony import */ var react_dropdown_select__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_dropdown_select__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var rc_collapse__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rc-collapse */ \"./node_modules/rc-collapse/es/index.js\");\n/* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react-bootstrap */ \"./node_modules/react-bootstrap/esm/index.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../data */ \"./src/modules/patients/data/index.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//function createRef<T>(): RefObject<T>\nlet DentalHistoryPanel = class DentalHistoryPanel extends react__WEBPACK_IMPORTED_MODULE_9__[\"Component\"] {\n    constructor(props) {\n        super(props);\n        this.viewChart = true;\n        this.viewToothISO = 0;\n        this.triggerUpdate = 0;\n        this.onChange = (activeKey) => {\n            this.setState({\n                activeKey\n            });\n        };\n        this.state = {\n            printview: \"\",\n            showDiagnosis: false,\n            showProcedure: false,\n            activeKey: [],\n            accordion: false,\n            currentProcedureIndex: 0,\n            selectedProcedure: {},\n            selectedTeeth: [],\n            saveProcedureSeparate: true,\n            searchProcedureText: \"\"\n        };\n    }\n    get canEdit() {\n        return _core__WEBPACK_IMPORTED_MODULE_3__[\"user\"].currentUser.canEditPatients;\n    }\n    componentWillMount() {\n        this.viewToothISO = 0;\n    }\n    render() {\n        console.log(\"this.props.patient\", this.props.patient.procedureGraphicCode);\n        let options = { left: \"left\", right: \"right\", both: \"both\" };\n        const procedureShown = this.state.searchProcedureText\n            ? _modules__WEBPACK_IMPORTED_MODULE_4__[\"procedureList\"].filter(pro => pro.value\n                .toUpperCase()\n                .includes(this.state.searchProcedureText.toUpperCase()))\n            : _modules__WEBPACK_IMPORTED_MODULE_4__[\"procedureList\"].filter((pro) => pro.parentIndex === this.state.currentProcedureIndex + 1);\n        return (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"dental-history teeth\" },\n            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_8__[\"Toggle\"], { defaultChecked: true, onText: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(\"View graphic chart\"), offText: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(\"View sorted table\"), onChange: (ev, newVal) => {\n                    this.viewChart = newVal;\n                } }),\n            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_8__[\"Dropdown\"], { disabled: !this.canEdit, placeholder: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(\"Print\"), options: Object.keys(options).map(x => ({\n                    key: x,\n                    text: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(options[x])\n                })), defaultSelectedKey: options.both, onChange: (ev, has) => {\n                    if (has.key === options.left) {\n                        this.setState({\n                            printview: \"left\"\n                        }, () => {\n                            window.print();\n                        });\n                    }\n                } }),\n            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"m-t-20\" }, this.viewChart ? (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"chart\" },\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](_common_components__WEBPACK_IMPORTED_MODULE_2__[\"SectionComponent\"], { title: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(`Permanent Teeth`), backgroundColor: \"#F7F7F7\" },\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](_common_components__WEBPACK_IMPORTED_MODULE_2__[\"AsyncComponent\"], { key: \"teeth-permanent\", loader: () => tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function* () {\n                            const Component = (yield __webpack_require__.e(/*! import() */ 35).then(__webpack_require__.bind(null, /*! ./teeth-permanent */ \"./src/modules/patients/components/teeth-permanent.tsx\")))\n                                .TeethPermanentChart;\n                            return (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](Component, { teeth: this.props.patient.teeth, patient: this.props.patient, onClick: number => {\n                                    this.viewToothISO = number;\n                                    if (this.state.selectedTeeth.indexOf(number) === -1) {\n                                        this.state.selectedTeeth.push(number);\n                                        this.setState(Object.assign({}, this.state));\n                                    }\n                                    else {\n                                        const selectedTeeth = this.state.selectedTeeth;\n                                        selectedTeeth.splice(selectedTeeth.indexOf(number), 1);\n                                        this.setState({ selectedTeeth });\n                                    }\n                                } }));\n                        }) })),\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](_common_components__WEBPACK_IMPORTED_MODULE_2__[\"SectionComponent\"], { title: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(`Deciduous Teeth`), backgroundColor: \"#F7F7F7\" },\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](_common_components__WEBPACK_IMPORTED_MODULE_2__[\"AsyncComponent\"], { key: \"teeth-primary\", loader: () => tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function* () {\n                            const Component = (yield __webpack_require__.e(/*! import() */ 34).then(__webpack_require__.bind(null, /*! ./teeth-deciduous */ \"./src/modules/patients/components/teeth-deciduous.tsx\")))\n                                .TeethDeciduousChart;\n                            return (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](Component, { teeth: this.props.patient.teeth, patient: this.props.patient, onClick: number => {\n                                    this.viewToothISO = number;\n                                    if (this.state.selectedTeeth.indexOf(number) === -1) {\n                                        this.state.selectedTeeth.push(number);\n                                        this.setState(Object.assign({}, this.state));\n                                    }\n                                    else {\n                                        const selectedTeeth = this.state.selectedTeeth;\n                                        selectedTeeth.splice(selectedTeeth.indexOf(number), 1);\n                                        this.setState({ selectedTeeth });\n                                    }\n                                } }));\n                        }) })))) : (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"tabulated\" },\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](_common_components__WEBPACK_IMPORTED_MODULE_2__[\"SectionComponent\"], { title: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(`Permanent Teeth`) },\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"table\", { className: \"permanent\" },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"tbody\", null,\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"tr\", null, [\n                                this.mapQuadrant(11, 18, true),\n                                this.mapQuadrant(21, 28, false)\n                            ]),\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"tr\", null, [\n                                this.mapQuadrant(41, 48, true),\n                                this.mapQuadrant(31, 38, false)\n                            ])))),\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](_common_components__WEBPACK_IMPORTED_MODULE_2__[\"SectionComponent\"], { title: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(`Deciduous Teeth`) },\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"table\", { className: \"deciduous\" },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"tbody\", null,\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"tr\", null, [\n                                this.mapQuadrant(51, 55, true),\n                                this.mapQuadrant(61, 65, false)\n                            ]),\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"tr\", null, [\n                                this.mapQuadrant(81, 85, true),\n                                this.mapQuadrant(71, 75, false)\n                            ]))))))),\n            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_8__[\"Panel\"], { isOpen: !!this.props.patient.teeth[this.viewToothISO] &&\n                    !this.state.showProcedure, type: office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_8__[\"PanelType\"].smallFixedFar, closeButtonAriaLabel: \"Close\", isLightDismiss: true, onDismiss: () => {\n                    this.viewToothISO = 0;\n                    this.setState(Object.assign({}, this.state, { showDiagnosis: false }));\n                }, onRenderNavigation: () => {\n                    const tooth = this.props.patient.teeth[this.viewToothISO];\n                    return (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](_common_components__WEBPACK_IMPORTED_MODULE_2__[\"Row\"], { className: \"panel-heading\" },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](_common_components__WEBPACK_IMPORTED_MODULE_2__[\"Col\"], { span: 22 },\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](_common_components__WEBPACK_IMPORTED_MODULE_2__[\"ProfileComponent\"], { name: `ISO: ${tooth ? tooth.ISO : \"\"} - Universal: ${tooth ? tooth.Universal : \"\"}`, secondaryElement: react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"span\", null, tooth\n                                    ? tooth.Name.split(\" \")\n                                        .filter((x, i) => i)\n                                        .join(\" \")\n                                    : \"\"), onRenderInitials: () => (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"span\", { className: \"palmer\" }, tooth ? tooth.Palmer : \"\")), size: 3 })),\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](_common_components__WEBPACK_IMPORTED_MODULE_2__[\"Col\"], { span: 2, className: \"close\" },\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_8__[\"IconButton\"], { iconProps: { iconName: \"cancel\" }, onClick: () => {\n                                    this.viewToothISO = 0;\n                                } }))));\n                } },\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"br\", null),\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"br\", null),\n                this.props.patient.teeth[this.viewToothISO] ? (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", null,\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"tooth-details\" },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_8__[\"Dropdown\"], { placeholder: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(`Condition`), onChange: (ev, newVal) => {\n                                this.props.patient.teeth[this.viewToothISO].condition = newVal.key.toString();\n                                this.props.patient.triggerUpdate++;\n                                this.forceUpdate();\n                            }, defaultSelectedKey: this.props.patient.teeth[this.viewToothISO].condition, className: \"single-tooth-condition\", options: Object.keys(_modules__WEBPACK_IMPORTED_MODULE_4__[\"ToothCondition\"]).map(c => ({\n                                key: c,\n                                text: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(c)\n                            })), disabled: !this.canEdit }),\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](common_components_editable_list_editable_list__WEBPACK_IMPORTED_MODULE_5__[\"EditableListComponent\"], { label: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(\"History notes\"), value: this.props.patient.teeth[this.viewToothISO].notes, disabled: !this.canEdit, onChange: e => {\n                                this.props.patient.teeth[this.viewToothISO].notes = e;\n                                this.props.patient.triggerUpdate++;\n                            } })),\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"add-diagnosis-wrapper\" },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"normal-title\", onClick: () => {\n                                this.props.patient.procedureGraphicCode = [];\n                                this.props.patient.teeth[this.viewToothISO].diagnosis = {\n                                    id: \"\",\n                                    value: \"\",\n                                    date: new Date()\n                                };\n                                const procedures = this.props.patient.procedures.filter(pro => !pro.tooth.includes(this.viewToothISO));\n                                this.props.patient.procedures = procedures;\n                                this.viewToothISO = 0;\n                                this.setState(Object.assign({}, this.state, { showDiagnosis: false }));\n                            } }, \"Normal\"),\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"add-diagnosis-title\", onClick: () => {\n                                this.setState(Object.assign({}, this.state, { showDiagnosis: true }));\n                            } }, \"Add diagnosis\"),\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"add-diagnosis-title\", onClick: () => this.setState(Object.assign({}, this.state, { showProcedure: true })) }, \"Add Procedure\"),\n                        (this.state.showDiagnosis ||\n                            (this.props.patient.teeth[this.viewToothISO].diagnosis &&\n                                this.props.patient.teeth[this.viewToothISO].diagnosis\n                                    .id)) && (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_9__[\"Fragment\"], null,\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", { style: { marginBottom: \"5px\" } }, \"Filter by name\"),\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_dropdown_select__WEBPACK_IMPORTED_MODULE_10___default.a, { options: Object.keys(_modules__WEBPACK_IMPORTED_MODULE_4__[\"Diagnosis\"]).map(c => ({\n                                    id: c,\n                                    key: c,\n                                    value: Object(_core__WEBPACK_IMPORTED_MODULE_3__[\"text\"])(_modules__WEBPACK_IMPORTED_MODULE_4__[\"Diagnosis\"][c]),\n                                    title: _modules__WEBPACK_IMPORTED_MODULE_4__[\"Diagnosis\"][c].title\n                                })), searchable: true, searchBy: \"title\", itemRenderer: ({ item, methods }) => (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](rc_collapse__WEBPACK_IMPORTED_MODULE_11__[\"default\"], { accordion: this.state.accordion, onChange: this.onChange, activeKey: this.state.activeKey },\n                                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](rc_collapse__WEBPACK_IMPORTED_MODULE_11__[\"Panel\"], { style: {\n                                            padding: \"10px\",\n                                            backgroundColor: \"#ffffff\",\n                                            borderTop: \"none\"\n                                        }, key: item.id, header: item.value.title }, item.value.diagnosis.map((d, index) => (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", { style: {\n                                            paddingLeft: \"10px\",\n                                            color: \"#0078d4\"\n                                        }, key: d.id + index, onClick: () => {\n                                            this.props.patient.teeth[this.viewToothISO].diagnosis = {\n                                                id: d.id,\n                                                value: d.value,\n                                                date: new Date()\n                                            };\n                                            this.props.patient.triggerUpdate++;\n                                            this.forceUpdate();\n                                            // methods.addItem(item)\n                                        } }, `${d.id} ${d.value}`)))))) }))),\n                        this.props.patient.teeth[this.viewToothISO].diagnosis &&\n                            this.props.patient.teeth[this.viewToothISO].diagnosis.id && (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", null,\n                            \"Selected diagnosis:\",\n                            \" \",\n                            this.props.patient.teeth[this.viewToothISO].diagnosis\n                                .value))))) : (\"\")),\n            this.state.showProcedure && (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { style: {\n                    zIndex: 12,\n                    borderTop: \"1px solid #999\",\n                    marginTop: \"5px\",\n                    position: \"fixed\",\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    padding: \"10px 40px\",\n                    backgroundColor: \"#ffffff\",\n                    maxHeight: \"300px\",\n                    overflow: \"scroll\"\n                } },\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Row\"], { className: \"flex-row-reverse\" },\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], null,\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", { style: {\n                                textAlign: \"right\",\n                                color: \"#2d89ef\",\n                                cursor: \"pointer\",\n                                marginBottom: \"0\"\n                            }, onClick: () => this.setState({ showProcedure: false }) }, \"Close\"))),\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Row\"], null,\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], { xs: 4 },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", { style: { fontWeight: \"bold\", marginBottom: \"5px\" } }, \"Status\")),\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], { xs: 8 },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", { style: { fontWeight: \"bold\", marginBottom: \"5px\" } }, \"Teeth\"))),\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Row\"], null,\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], { xs: 4 },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { style: { display: \"flex\" } },\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", { style: { marginRight: \"10px\" } }, \"Planned\"),\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", null, \"Completed\"))),\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], { xs: 3 }, this.state.selectedTeeth &&\n                        this.state.selectedTeeth.length > 0 && (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", null, this.state.selectedTeeth.map(teethNo => {\n                        return `#${teethNo} `;\n                    }))))),\n                _modules__WEBPACK_IMPORTED_MODULE_4__[\"procedures\"][this.state.currentProcedureIndex] &&\n                    _modules__WEBPACK_IMPORTED_MODULE_4__[\"procedures\"][this.state.currentProcedureIndex].children ? (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Row\"], { style: { width: \"400px\" } }, _modules__WEBPACK_IMPORTED_MODULE_4__[\"procedures\"][this.state.currentProcedureIndex].children.map(child => {\n                    let className = \"sub-procedure\";\n                    if (this.props.patient.procedureGraphicCode &&\n                        this.props.patient.procedureGraphicCode.length > 0) {\n                        this.props.patient.procedureGraphicCode.map(code => {\n                            if (code.includes(child)) {\n                                className += \" sub-procedure-selected\";\n                            }\n                        });\n                    }\n                    return (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], null,\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", { className: className, onClick: () => {\n                                if (this.state.selectedTeeth &&\n                                    this.state.selectedTeeth.length > 0) {\n                                    this.state.selectedTeeth.map(tooth => {\n                                        const procedureGraphicCode = this.props.patient\n                                            .procedureGraphicCode;\n                                        let graphicCode = _modules__WEBPACK_IMPORTED_MODULE_4__[\"procedures\"][this.state.currentProcedureIndex]\n                                            .id +\n                                            child +\n                                            tooth;\n                                        const indexOfGraphicCode = this.props.patient.procedureGraphicCode.indexOf(graphicCode);\n                                        if (indexOfGraphicCode === -1) {\n                                            procedureGraphicCode.push(graphicCode);\n                                        }\n                                        else {\n                                            procedureGraphicCode.splice(indexOfGraphicCode, 1);\n                                        }\n                                        this.props.patient.procedureGraphicCode = procedureGraphicCode;\n                                    });\n                                }\n                            } }, child)));\n                }))) : null,\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Row\"], { className: \"m-2\" },\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], null,\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"input\", { className: \"w-100 p-1\", type: \"text\", placeholder: \"Search... \", value: this.state.searchProcedureText, onChange: e => {\n                                this.setState({ searchProcedureText: e.target.value });\n                            } }))),\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Row\"], { className: \"justify-content-xs-between\" }, _modules__WEBPACK_IMPORTED_MODULE_4__[\"procedures\"].map((pro, index) => (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], { key: index, style: { cursor: \"pointer\" }, className: \"d-flex flex-column align-items-xs-centre\", onClick: () => {\n                        if (!_modules__WEBPACK_IMPORTED_MODULE_4__[\"procedures\"][index].children ||\n                            [\"rootCanal\", \"prosthetics\"].includes(_modules__WEBPACK_IMPORTED_MODULE_4__[\"procedures\"][index].id)) {\n                            if (this.state.selectedTeeth &&\n                                this.state.selectedTeeth.length > 0) {\n                                this.state.selectedTeeth.map(tooth => {\n                                    const procedureGraphicCode = this.props.patient\n                                        .procedureGraphicCode;\n                                    let graphicCode = pro.id + \"\" + tooth;\n                                    const indexOfGraphicCode = this.props.patient.procedureGraphicCode.indexOf(graphicCode);\n                                    if (indexOfGraphicCode === -1) {\n                                        procedureGraphicCode.push(graphicCode);\n                                    }\n                                    // This is another flow that show  procedure together\n                                    // else {\n                                    //   procedureGraphicCode.splice(indexOfGraphicCode, 1);\n                                    // }\n                                    // This is another flow that show one procedure at the time\n                                    if (!_modules__WEBPACK_IMPORTED_MODULE_4__[\"procedures\"][this.state.currentProcedureIndex]\n                                        .children ||\n                                        [\"rootCanal\", \"prosthetics\"].includes(_modules__WEBPACK_IMPORTED_MODULE_4__[\"procedures\"][this.state.currentProcedureIndex].id)) {\n                                        let preGraphicCode = _modules__WEBPACK_IMPORTED_MODULE_4__[\"procedures\"][this.state.currentProcedureIndex].id +\n                                            \"\" +\n                                            tooth;\n                                        const indexOfPreGraphicCode = this.props.patient.procedureGraphicCode.indexOf(preGraphicCode);\n                                        if (indexOfPreGraphicCode !== -1) {\n                                            procedureGraphicCode.splice(indexOfPreGraphicCode, 1);\n                                        }\n                                    }\n                                    this.props.patient.procedureGraphicCode = procedureGraphicCode;\n                                });\n                            }\n                        }\n                        this.setState({ currentProcedureIndex: index });\n                    } },\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { style: { margin: \"0 auto\" } },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"img\", { src: `./icons/${pro.id}.png` })),\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", { style: index === this.state.currentProcedureIndex\n                            ? {\n                                marginTop: \"10px\",\n                                textAlign: \"center\",\n                                color: \"#2d89ef\"\n                            }\n                            : { marginTop: \"10px\", textAlign: \"center\" } }, pro.title))))),\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { style: {\n                        height: \"300px\",\n                        padding: \"10px 20px\",\n                        overflow: \"auto\",\n                        backgroundColor: \"#F7F7F7\"\n                    } }, procedureShown.map(procedure => {\n                    let procedureInSelectedList = this.state.selectedProcedure[`${procedure.parentId}-${procedure.parentIndex}${procedure.order}`];\n                    return (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Row\"], { className: \"justify-content-between\", style: { padding: \"5px\" } },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], { style: { cursor: \"pointer\" }, xs: 8, onClick: () => {\n                                if (procedureInSelectedList) {\n                                    const selectedProcedure = this.state\n                                        .selectedProcedure;\n                                    delete this.state.selectedProcedure[`${procedure.parentId}-${procedure.parentIndex}${procedure.order}`];\n                                    this.setState({ selectedProcedure });\n                                }\n                                else {\n                                    const selectedProcedure = Object.assign({}, this.state.selectedProcedure);\n                                    selectedProcedure[`${procedure.parentId}-${procedure.parentIndex}${procedure.order}`] = Object.assign({}, procedure, { quantity: 1 });\n                                    this.setState({ selectedProcedure });\n                                }\n                            } },\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", { style: { marginBottom: \"5px\" } },\n                                procedure.parentIndex,\n                                \"(\",\n                                procedure.order,\n                                \")\"),\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"p\", { style: { margin: 0 } }, procedure.value)),\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], { xs: 1 }, procedureInSelectedList && (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"d-flex\" },\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"input\", { style: {\n                                    borderRadius: \"5px\",\n                                    padding: \"10px\",\n                                    border: \"none\",\n                                    width: \"60px\"\n                                }, type: \"number\", value: procedureInSelectedList.quantity, onChange: e => {\n                                    procedureInSelectedList.quantity = e.target.value;\n                                    this.setState(Object.assign({}, this.state));\n                                } })))),\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], { xs: 2 },\n                            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"d-flex\" },\n                                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"input\", { style: {\n                                        borderRadius: \"5px\",\n                                        padding: \"10px 5px\",\n                                        border: \"none\"\n                                    }, type: \"number\", value: procedureInSelectedList &&\n                                        procedureInSelectedList.price !== undefined\n                                        ? procedureInSelectedList.price\n                                        : procedure.defaultPrice, onChange: e => {\n                                        if (procedureInSelectedList) {\n                                            procedureInSelectedList.price = e.target.value;\n                                            this.setState(Object.assign({}, this.state));\n                                        }\n                                        else {\n                                            alert(\"Please select the procedure before modifying its price\");\n                                        }\n                                    } }),\n                                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { style: {\n                                        textAlign: \"center\",\n                                        padding: \"10px 10px\",\n                                        backgroundColor: \"#ffffff\",\n                                        color: \"#2d89ef\"\n                                    } }, \"$\")))));\n                })),\n                react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Row\"], { className: \"justify-content-between mt-3 align-items-centre\" },\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], { xs: 9 }, this.state.selectedTeeth &&\n                        this.state.selectedTeeth.length > 0 && (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"div\", { className: \"form-check\" },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"input\", { className: \"form-check-input\", id: \"checkForTooth\", type: \"checkbox\", checked: this.state.saveProcedureSeparate, onChange: e => this.setState({\n                                saveProcedureSeparate: e.target.checked\n                            }) }),\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"label\", { className: \"form-check-label\", htmlFor: \"checkForTooth\" },\n                            \" \",\n                            \"Save these procedures for each tooth separately\",\n                            \" \")))),\n                    react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](react_bootstrap__WEBPACK_IMPORTED_MODULE_12__[\"Col\"], { xs: 3 },\n                        react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"button\", { className: \"btn btn-primary\", onClick: () => {\n                                const procedures = [];\n                                if (this.state.selectedProcedure &&\n                                    Object.keys(this.state.selectedProcedure).length > 0) {\n                                    for (let [key] of Object.entries(this.state.selectedProcedure)) {\n                                        const selectedPro = this.state.selectedProcedure;\n                                        if (this.state.selectedTeeth.length === 0) {\n                                            const pro = new _data__WEBPACK_IMPORTED_MODULE_13__[\"Procedures\"]({\n                                                id: key + \"-\" + new Date().getTime(),\n                                                slectedGraphicCode: [],\n                                                name: selectedPro[key].value,\n                                                quantity: selectedPro[key].quantity,\n                                                patientid: this.props.patient._id,\n                                                tooth: [],\n                                                fees: selectedPro[key].price ||\n                                                    selectedPro[key].defaultPrice,\n                                                done: false,\n                                                date: new Date().toISOString()\n                                            });\n                                            procedures.push(pro);\n                                        }\n                                        else {\n                                            if (this.state.saveProcedureSeparate) {\n                                                this.state.selectedTeeth.map(item => {\n                                                    const slectedGraphicCode = this.props.patient.procedureGraphicCode.filter(code => {\n                                                        return code.includes(item.toString()) &&\n                                                            code.includes(key.split(\"-\")[0])\n                                                            ? true\n                                                            : false;\n                                                    });\n                                                    const pro = new _data__WEBPACK_IMPORTED_MODULE_13__[\"Procedures\"]({\n                                                        id: key + \"-\" + item + \"-\" + new Date().getTime(),\n                                                        slectedGraphicCode: slectedGraphicCode,\n                                                        name: selectedPro[key].value,\n                                                        quantity: selectedPro[key].quantity,\n                                                        patientid: this.props.patient._id,\n                                                        tooth: [item],\n                                                        fees: selectedPro[key].price ||\n                                                            selectedPro[key].defaultPrice,\n                                                        done: false,\n                                                        date: new Date().toISOString()\n                                                    });\n                                                    procedures.push(pro);\n                                                });\n                                            }\n                                            else {\n                                                const slectedGraphicCode = [];\n                                                this.state.selectedTeeth.map(item => {\n                                                    this.props.patient.procedureGraphicCode.map(code => {\n                                                        if (code.includes(item.toString()) &&\n                                                            code.includes(key.split(\"-\")[0])) {\n                                                            slectedGraphicCode.push(code);\n                                                        }\n                                                    });\n                                                });\n                                                const pro = new _data__WEBPACK_IMPORTED_MODULE_13__[\"Procedures\"]({\n                                                    id: key + \"-\" + new Date().getTime(),\n                                                    slectedGraphicCode: slectedGraphicCode,\n                                                    name: selectedPro[key].value,\n                                                    quantity: selectedPro[key].quantity,\n                                                    patientid: this.props.patient._id,\n                                                    tooth: this.state.selectedTeeth,\n                                                    fees: selectedPro[key].price ||\n                                                        selectedPro[key].defaultPrice,\n                                                    done: false,\n                                                    date: new Date().toISOString()\n                                                });\n                                                procedures.push(pro);\n                                            }\n                                        }\n                                    }\n                                    this.props.patient.procedures = [\n                                        ...this.props.patient.procedures,\n                                        ...procedures\n                                    ];\n                                    this.setState({\n                                        showProcedure: false,\n                                        currentProcedureIndex: 0,\n                                        selectedProcedure: {},\n                                        selectedTeeth: [],\n                                        saveProcedureSeparate: true\n                                    }, this.props.toggleProcedureTable);\n                                }\n                            } },\n                            \"Add procedures (\",\n                            Object.keys(this.state.selectedProcedure).length,\n                            \")\")))))));\n    }\n    mapQuadrant(min, max, reverse) {\n        let arr = this.props.patient.teeth;\n        arr = arr.filter(tooth => tooth.ISO >= min && tooth.ISO <= max);\n        arr = reverse ? arr.reverse() : arr;\n        return arr.map(tooth => (react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"td\", { key: \"tooth\" + tooth.ISO, style: { background: Object(_modules__WEBPACK_IMPORTED_MODULE_4__[\"conditionToColor\"])(tooth.condition) }, onClick: () => (this.viewToothISO = tooth.ISO) },\n            react__WEBPACK_IMPORTED_MODULE_9__[\"createElement\"](\"span\", { className: \"has-notes\", style: tooth.notes.length ? {} : { display: \"none\" } }),\n            tooth.ISO)));\n    }\n};\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    mobx__WEBPACK_IMPORTED_MODULE_6__[\"observable\"]\n], DentalHistoryPanel.prototype, \"viewChart\", void 0);\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    mobx__WEBPACK_IMPORTED_MODULE_6__[\"observable\"]\n], DentalHistoryPanel.prototype, \"viewToothISO\", void 0);\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    mobx__WEBPACK_IMPORTED_MODULE_6__[\"observable\"]\n], DentalHistoryPanel.prototype, \"triggerUpdate\", void 0);\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    mobx__WEBPACK_IMPORTED_MODULE_6__[\"computed\"]\n], DentalHistoryPanel.prototype, \"canEdit\", null);\nDentalHistoryPanel = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    mobx_react__WEBPACK_IMPORTED_MODULE_7__[\"observer\"]\n], DentalHistoryPanel);\n\n\n\n//# sourceURL=webpack:///./src/modules/patients/components/dental-history.tsx?");

/***/ })

}]);